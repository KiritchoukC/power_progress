name: CD on release

on: 
  pull_request:
    branches: 
      - release

jobs:
  apk-deploy:
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        
      - name: Use NodeJs 8.x
        uses: actions/setup-node@v1
        with:
          node-version: 8.x
      - run: npm install
      - run: npm run update-pubspec-version

      - name: Add release config
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          BUILD_GRADLE: ${{ secrets.BUILD_GRADLE }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
          KEYSTORE_RELEASE: ${{ secrets.KEYSTORE_RELEASE }}
          KEYSTORE_RELEASE_PASSWORD: ${{ secrets.KEYSTORE_RELEASE_PASSWORD }}
        run: |
          sudo echo $GOOGLE_SERVICES > android/app/google-services.json
          sudo echo $BUILD_GRADLE > android/app/build.gradle
          sudo echo $KEY_PROPERTIES > android/key.properties
          sudo echo $KEYSTORE_RELEASE > android/app/key.jks.asc
          gpg -d -passphrase $KEYSTORE_RELEASE_PASSWORD --batch android/app/key.jks.asc > android/app/key.jks
        
      - name: Launch flutter tests
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.18.0-dev.5.0'
          channel: 'dev'
      - run: flutter test

      - name: Build apk
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.18.0-dev.5.0'
          channel: 'dev'
      - run: flutter build apk

      - name: Firebase apk distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.1.1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: Default
          file: ./build/app/outputs/apk/release/app-release.apk